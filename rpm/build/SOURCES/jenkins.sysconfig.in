## Path:        Development/@@CAMELARTIFACTNAME@@
## Description: @@SUMMARY@@
## Type:        string
## Default:     "~~HOME~~"
## ServiceRestart: jenkins
#
# Directory where Jenkins store its configuration and working
# files (checkouts, build reports, artifacts, ...).
#
JENKINS_HOME="~~HOME~~"

## Type:        string
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# Java executable to run Jenkins
# When left empty, we'll try to find the suitable Java.
#
JENKINS_JAVA_CMD=""

## Type:        string
## Default:     "@@ARTIFACTNAME@@"
## ServiceRestart: @@ARTIFACTNAME@@
#
# Unix user account that runs the Jenkins daemon
# Be careful when you change this, as you need to update
# permissions of $JENKINS_HOME and /var/log/jenkins.
#
JENKINS_USER="@@ARTIFACTNAME@@"

## Type:        string
## Default: "false"
## ServiceRestart: jenkins
#
# Whether to skip potentially long-running chown at the
# $JENKINS_HOME location. Do not enable this, "true", unless
# you know what you're doing. See JENKINS-23273.
#
#JENKINS_INSTALL_SKIP_CHOWN="false"

## Type:        string
## Default:     "-server -XX:+AlwaysPreTouch -XX:+ParallelRefProcEnabled"
## ServiceRestart: @@ARTIFACTNAME@@
# Sensible defaults, server is normally default but we ensure it is on
# AlwaysPreTouch prezeroes allocated heap pages at startup, which improves runtime performance at slight cost to startup time
# ParallelRefProcEnabled enables use of concurrent threads to process references, which Jenkins uses heavily for caching
BASE_JAVA_ARGS=' -server -XX:+AlwaysPreTouch -XX:+ParallelRefProcEnabled '

## Type:        string
## Default:     "-Xloggc:$JENKINS_HOME/gc-%t.log -XX:NumberOfGCLogFiles=2 -XX:+UseGCLogFileRotation -XX:GCLogFileSize=100m -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCCause -XX:+PrintTenuringDistribution -XX:+PrintReferenceGC -XX:+PrintAdaptiveSizePolicy "
# Turns on GC logging for Jenkins, with log rotation, for diagnostics and tuning use
GC_LOGGING=" -Xloggc:$JENKINS_HOME/gc-%t.log -XX:NumberOfGCLogFiles=2 -XX:+UseGCLogFileRotation -XX:GCLogFileSize=100m \
  -XX:+PrintGC -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintHeapAtGC -XX:+PrintGCCause \
  -XX:+PrintTenuringDistribution -XX:+PrintReferenceGC -XX:+PrintAdaptiveSizePolicy "

## Type:        string
## Default:     "-XX:+UseG1GC -XX:+UnlockDiagnosticVMOptions -XX:G1SummarizeRSetStatsPeriod=1 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses -XX:+UseStringDeduplication"
# G1 GC default arguments - if you are using multiple cores and a heap of >= 2 GB then you should use this and tweak it
# Suggested tweaks: increase region size, especially for small heap sizes i.e. -XX:G1HeapRegionSize=8
G1GC_ARGS=' -XX:+UseG1GC -XX:+UnlockDiagnosticVMOptions -XX:G1SummarizeRSetStatsPeriod=1 -XX:+ExplicitGCInvokesConcurrent -XX:+UseStringDeduplication '

# Look to see if we should autoselect G1 garbage collection instead of defaults, with more than 2 cores and Java 8 or newer
CPU_COUNT=$(cat /proc/cpuinfo | grep 'core id' | sort | uniq | wc -l)
# This is not *guaranteed* to use the same Java version as Jenkins does, but it's a reasonable heuristic
MAJOR_JAVA_VERSION=$(java -version 2>&1 | grep -Eo 'version\s+"([0-9]\.)?[0-9]+[^"]+"' | grep -Eo '"(1\.)?[0-9]+' | sed -E 's/"(1\.)?//g')
if [ -z "$MAJOR_JAVA_VERSION" ]; then MAJOR_JAVA_VERSION=7; fi
AUTO_GC=""
if [ $CPU_COUNT -gt 2 ] && [ $MAJOR_JAVA_VERSION -gt 7 ]; then
    AUTO_GC=$G1GC_ARGS
fi

## Type:        string
## Default:     "-Djava.awt.headless=true $BASE_JAVA_ARGS $GC_LOGGING $AUTO_GC"
## ServiceRestart: @@ARTIFACTNAME@@
#
# Options to pass to java when running Jenkins.  We may remove the variables defined above if needed.
#
JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true $BASE_JAVA_ARGS $GC_LOGGING $AUTO_GC"

## Type:        integer(0:65535)
## Default:     @@PORT@@
## ServiceRestart: jenkins
#
# Port Jenkins is listening on.
# Set to -1 to disable
#
JENKINS_PORT="@@PORT@@"

## Type:        string
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# IP address Jenkins listens on for HTTP requests.
# Default is all interfaces (0.0.0.0).
#
JENKINS_LISTEN_ADDRESS=""

## Type:        integer(0:65535)
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# HTTPS port Jenkins is listening on.
# Default is disabled.
#
JENKINS_HTTPS_PORT=""

## Type:        string
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# Path to the keystore in JKS format (as created by the JDK 'keytool').
# Default is disabled.
#
JENKINS_HTTPS_KEYSTORE=""

## Type:        string
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# Password to access the keystore defined in JENKINS_HTTPS_KEYSTORE.
# Default is disabled.
#
JENKINS_HTTPS_KEYSTORE_PASSWORD=""

## Type:        string
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# IP address Jenkins listens on for HTTPS requests.
# Default is disabled.
#
JENKINS_HTTPS_LISTEN_ADDRESS=""


## Type:        integer(1:9)
## Default:     5
## ServiceRestart: @@ARTIFACTNAME@@
#
# Debug level for logs -- the higher the value, the more verbose.
# 5 is INFO.
#
JENKINS_DEBUG_LEVEL="5"

## Type:        yesno
## Default:     no
## ServiceRestart: @@ARTIFACTNAME@@
#
# Whether to enable access logging or not.
#
JENKINS_ENABLE_ACCESS_LOG="no"

## Type:        integer
## Default:     100
## ServiceRestart: @@ARTIFACTNAME@@
#
# Maximum number of HTTP worker threads.
#
JENKINS_HANDLER_MAX="100"

## Type:        integer
## Default:     20
## ServiceRestart: @@ARTIFACTNAME@@
#
# Maximum number of idle HTTP worker threads.
#
JENKINS_HANDLER_IDLE="20"

## Type:        string
## Default:     ""
## ServiceRestart: @@ARTIFACTNAME@@
#
# Pass arbitrary arguments to Jenkins.
# Full option list: java -jar @@ARTIFACTNAME@@.war --help
#
JENKINS_ARGS=""
